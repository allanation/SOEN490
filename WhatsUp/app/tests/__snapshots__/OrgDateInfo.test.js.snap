// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Renders Create New Event Third Page Correctly 1`] = `
<View
  accessibilityIgnoresInvertColors={true}
  style={
    Array [
      Object {
        "flex": 1,
        "paddingTop": 20,
      },
      Object {
        "marginTop": 30,
        "padding": 20,
      },
    ]
  }
>
  <Image
    source={
      Object {
        "uri": undefined,
      }
    }
    style={
      Array [
        Object {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        },
        Object {
          "height": undefined,
          "width": undefined,
        },
        undefined,
      ]
    }
  />
  <View
    style={
      Object {
        "flexDirection": "row",
        "justifyContent": "center",
      }
    }
  >
    <View
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "elevation": 2,
          "left": 0,
          "opacity": 1,
          "position": "absolute",
          "shadowOffset": Object {
            "height": 1,
            "width": 1,
          },
          "shadowOpacity": 0.2,
          "shadowRadius": 3,
        }
      }
    >
      <View
        style={
          Object {
            "flexDirection": "row",
          }
        }
      >
        <Text />
        <Text
          style={
            Object {
              "marginLeft": 2,
            }
          }
        />
      </View>
    </View>
    <Text
      style={
        Array [
          Object {
            "fontFamily": "Helvetica Neue",
            "marginLeft": "1%",
          },
          Object {
            "alignSelf": "center",
          },
          Object {
            "fontSize": 28,
            "fontWeight": "bold",
          },
        ]
      }
    >
      Set Date Information
    </Text>
  </View>
  <View
    style={
      Object {
        "display": "flex",
        "width": "100%",
      }
    }
  >
    <Text
      style={
        Array [
          Object {
            "fontFamily": "Helvetica Neue",
            "marginLeft": "1%",
          },
          Object {
            "alignSelf": "center",
          },
          Object {
            "color": "#747474",
            "fontSize": 20,
            "marginBottom": 6,
            "marginLeft": "1%",
            "paddingVertical": 6,
          },
        ]
      }
    >
      Please pick the dates for your event
    </Text>
  </View>
  <View
    style={
      Object {
        "paddingTop": 15,
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "backgroundColor": "white",
            "borderColor": "#989797",
            "borderRadius": 12,
            "borderWidth": 1,
            "marginLeft": "1%",
            "marginVertical": 10,
            "opacity": 0.9,
            "paddingHorizontal": 12,
            "paddingVertical": 7,
            "width": "98%",
          },
          Object {
            "elevation": 2,
            "justifyContent": "center",
            "shadowColor": "black",
            "shadowOffset": Object {
              "height": 1,
              "width": 1,
            },
            "shadowOpacity": 0.2,
            "shadowRadius": 3,
          },
        ]
      }
    >
      <TextInput
        onChangeText={[Function]}
        placeholder="Number of days"
        placeholderTextColor="grey"
        style={
          Object {
            "color": "black",
            "fontFamily": "Helvetica Neue",
            "fontSize": 18,
            "opacity": 1,
          }
        }
        value=""
      />
    </View>
  </View>
  <View
    style={
      Object {
        "paddingTop": 2,
      }
    }
  >
    <View>
      <View>
        <Text
          style={
            Object {
              "alignContent": "center",
              "alignSelf": "center",
              "color": "#484545",
              "flex": 1,
              "flexDirection": "row",
              "fontSize": 24,
              "marginTop": 10,
              "paddingTop": 50,
            }
          }
        >
           Start Date & Time 
        </Text>
        <View
          style={
            Object {
              "alignItems": "center",
              "flex": 1,
              "flexDirection": "row",
              "flexDirectionL": "row",
              "justifyContent": "center",
              "padding": 20,
            }
          }
        >
          <RNDateTimePicker
            date={1680372507598}
            displayIOS="inline"
            enabled={true}
            minuteInterval="15"
            mode="time"
            onChange={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "height": 49.5,
                },
                Object {
                  "accentColor": "red",
                  "marginBottom": 10,
                  "width": "40%",
                },
              ]
            }
            testID="startTime"
          />
        </View>
        <View
          style={
            Object {
              "backgroundColor": "lightgrey",
              "flex": 1,
              "height": 1,
              "width": "100%",
            }
          }
        />
        <Text
          style={
            Object {
              "alignContent": "center",
              "alignSelf": "center",
              "color": "#484545",
              "flex": 1,
              "flexDirection": "row",
              "fontSize": 24,
              "marginTop": 10,
              "paddingTop": 50,
            }
          }
        >
           End Date & Time 
        </Text>
        <View
          style={
            Object {
              "alignItems": "center",
              "flex": 1,
              "flexDirection": "row",
              "flexDirectionL": "row",
              "justifyContent": "center",
              "padding": 20,
            }
          }
        >
          <RNDateTimePicker
            date={1680372507599}
            displayIOS="inline"
            enabled={true}
            minuteInterval="15"
            mode="time"
            onChange={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "height": 49.5,
                },
                Object {
                  "accentColor": "red",
                  "marginBottom": 10,
                  "width": "40%",
                },
              ]
            }
            testID="endTime"
          />
        </View>
        <View
          accessibilityState={
            Object {
              "disabled": false,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "alignSelf": "center",
              "backgroundColor": "#00c0a4",
              "borderRadius": 20,
              "elevation": 4,
              "marginLeft": "1%",
              "marginVertical": 40,
              "opacity": 1,
              "padding": 12,
              "shadowColor": "black",
              "shadowOffset": Object {
                "height": 1,
                "width": 1,
              },
              "shadowOpacity": 0.2,
              "shadowRadius": 3,
              "width": "90%",
            }
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#FFFFFF",
                  "fontFamily": "Helvetica Neue",
                  "fontSize": 18,
                  "fontWeight": "bold",
                  "textAlign": "center",
                  "textAlignVertical": "center",
                },
                undefined,
              ]
            }
          >
            Confirm Dates
          </Text>
        </View>
      </View>
    </View>
    <Text
      style={
        Object {
          "alignSelf": "center",
          "color": "#989797",
        }
      }
    >
      You must confirm your event dates before proceeding.
    </Text>
  </View>
  <View>
    <View
      accessibilityState={
        Object {
          "disabled": false,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "alignSelf": "center",
          "backgroundColor": "#00c0a4",
          "borderRadius": 20,
          "elevation": 4,
          "marginLeft": "1%",
          "marginVertical": 40,
          "opacity": 1,
          "padding": 12,
          "shadowColor": "black",
          "shadowOffset": Object {
            "height": 1,
            "width": 1,
          },
          "shadowOpacity": 0.2,
          "shadowRadius": 3,
          "width": "90%",
        }
      }
      testID="nextButton"
    >
      <Text
        style={
          Array [
            Object {
              "color": "#FFFFFF",
              "fontFamily": "Helvetica Neue",
              "fontSize": 18,
              "fontWeight": "bold",
              "textAlign": "center",
              "textAlignVertical": "center",
            },
            undefined,
          ]
        }
      >
        Next
      </Text>
    </View>
  </View>
</View>
`;
